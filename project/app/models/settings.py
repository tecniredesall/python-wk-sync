import os

from pydantic import BaseSettings, IPvAnyAddress, HttpUrl
from functools import lru_cache


class Settings(BaseSettings):
    APP_ENV: str = os.environ.get('APP_ENV')
    CELERY_BROKER_URL: str = os.environ.get('CELERY_BROKER_URL')
    CELERY_RESULT_BACKEND: str = os.environ.get('CELERY_RESULT_BACKEND')
    CORS_ALLOWED_ORIGINS: list = os.environ.get('CORS_ALLOWED_ORIGINS')
    CORS_ALLOW_METHODS: list = os.environ.get('CORS_ALLOW_METHODS')
    CORS_ALLOW_HEADERS: list = os.environ.get('CORS_ALLOW_HEADERS')
    CORS_ALLOW_CREDENTIALS: bool = os.environ.get('CORS_ALLOW_CREDENTIALS')
    MONGODB_URI: str = os.environ.get('MONGODB_URI')
    DB_CONNECTION: str = os.environ.get('DB_CONNECTION')
    DB_HOST: IPvAnyAddress = os.environ.get('DB_HOST')
    DB_DATABASE: str = os.environ.get('DB_DATABASE')
    DB_USERNAME: str = os.environ.get('DB_USERNAME')
    DB_PASSWORD: str = os.environ.get('DB_PASSWORD')
    DB_PORT: int = os.environ.get('DB_PORT')
    RABBITMQ_DEFAULT_USER: str = os.environ.get('RABBITMQ_DEFAULT_USER')
    RABBITMQ_DEFAULT_PASS: str = os.environ.get('RABBITMQ_DEFAULT_PASS')
    TRUMMODITY_BASE_URL: HttpUrl = os.environ.get('TRUMMODITY_BASE_URL')
    GC_RABBIT_HOST: str = os.environ.get('GC_RABBIT_HOST')
    GC_RABBIT_PORT: int = os.environ.get('GC_RABBIT_PORT')
    GC_RABBIT_USERNAME: str = os.environ.get('GC_RABBIT_USERNAME')
    GC_RABBIT_PASSWORD: str = os.environ.get('GC_RABBIT_PASSWORD')
    AWS_REGION: str = os.environ.get('AWS_REGION')
    AWS_QUEUE_NAME: str = os.environ.get('AWS_QUEUE_NAME')
    AWS_QUEUE_URL: HttpUrl = os.environ.get('AWS_QUEUE_URL')
    AWS_ACCESS_KEY_ID: str = os.environ.get('AWS_ACCESS_KEY_ID')
    AWS_SECRET_ACCESS_KEY: str = os.environ.get('AWS_SECRET_ACCESS_KEY')
    CLIENT_ID: str = os.environ.get('CLIENT_ID')
    CLIENT_SECRET: str = os.environ.get('CLIENT_SECRET')
    AUDIENCE_URL: HttpUrl = os.environ.get('AUDIENCE_URL')
    GRANT_TYPE: str = os.environ.get('GRANT_TYPE')
    AUTHENTICATION_URL: HttpUrl = os.environ.get('AUTHENTICATION_URL')
    FEDERATION_URL: HttpUrl = os.environ.get('FEDERATION_URL')
    CODE_PLATFORM: str = os.environ.get('CODE_PLATFORM')
    PARTITION_KEY: str = os.environ.get('PARTITION_KEY')
    SILOSYS_INSTANCE: str = os.environ.get('SILOSYS_INSTANCE')
    TRANSFORMATIONS_URL: HttpUrl = os.environ.get('TRANSFORMATIONS_URL')
    TRANSFORMATIONS_USER: str = os.environ.get('TRANSFORMATIONS_USER')
    TRANSFORMATIONS_PASSWORD: str = os.environ.get('TRANSFORMATIONS_PASSWORD')
    GET_CONTRACTS_TIMER: int = os.environ.get('GET_CONTRACTS_TIMER')
    RESEND_MESSAGE_TIMER: int = os.environ.get('RESEND_MESSAGE_TIMER')
    TRUMMODITY_USER: str = os.environ.get('TRUMMODITY_USER')
    TRUMMODITY_PASSWORD: str = os.environ.get('TRUMMODITY_PASSWORD')
    GET_APPS_PRODUCERS: bool = os.environ.get('GET_APPS_PRODUCERS')
    GET_APPS_FARMS: bool = os.environ.get('GET_APPS_FARMS')
    GET_APPS_BLOCKS: bool = os.environ.get('GET_APPS_BLOCKS')
    GET_CONTRACTS: bool = os.environ.get('GET_CONTRACTS')
    AWS_REGION_FEDERATION: str = os.environ.get('AWS_REGION_FEDERATION')
    AWS_ACCESS_KEY_FEDERATION: str = os.environ.get('AWS_ACCESS_KEY_FEDERATION')
    AWS_SECRET_FEDERATION: str = os.environ.get('AWS_SECRET_FEDERATION')
    AWS_QUEUE_URL_FEDERATION: str = os.environ.get('AWS_QUEUE_URL_FEDERATION')
    AWS_QUEUE_NAME_FEDERATION: str = os.environ.get('AWS_QUEUE_NAME_FEDERATION')
    GET_CHANGES_PLATFORMS_TIMER: int = os.environ.get('GET_CHANGES_PLATFORMS_TIMER')
    GC_RABBIT_QUEUE: str = os.environ.get('GC_RABBIT_QUEUE')
    GC_RABBIT_EXCHANGE: str = os.environ.get('GC_RABBIT_EXCHANGE')
    GC_RABBIT_ROUTING_KEY: str = os.environ.get('GC_RABBIT_ROUTING_KEY')

    class Config:
        env_file = ".env"

@lru_cache()
def get_settings():
    return Settings()
